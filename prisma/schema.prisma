generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SELLER
  ADMINISTRATOR
}

model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String @unique 
  username  String @unique
  name      String
  role      Role @default(USER)

  productGroups ProductGroup[]

  salt      String
  hash      String

  token     Token?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Token {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  
  user      User @relation(fields: [userId], references: [id])
  userId    String @unique

  redirect  String @default("/")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductCategory {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name String
  description String
  photo String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product-categories")
}

model ProductGroup {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  published   Boolean

  User        User? @relation(fields: [userId], references: [id]) // [ProductGroup] can only have one user
  userId      String @db.ObjectId

  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("product-groups")
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  stock Int

  group ProductGroup? @relation(fields: [groupId], references: [id])
  groupId String @db.ObjectId
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
}

model Cart {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  isGuest     Boolean @default(true)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("carts")
}
